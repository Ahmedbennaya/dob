{"ast":null,"code":"import axios from 'axios';\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, SIGNUP_REQUEST, SIGNUP_SUCCESS, SIGNUP_FAIL } from '../types';\nexport const loginUser = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/auth/login', {\n      email,\n      password\n    }, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logoutUser = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: LOGOUT\n  });\n};\nexport const registerUser = (name, email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: SIGNUP_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/auth/signup', {\n      name,\n      email,\n      password\n    }, config);\n    dispatch({\n      type: SIGNUP_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: SIGNUP_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAIL","loginUser","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logoutUser","removeItem","registerUser","name"],"sources":["C:/Users/maison/OneDrive/Bureau/Haithem site/doberman-breeding-business/frontend/src/redux/actions/authActions.js"],"sourcesContent":["import axios from 'axios';\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, SIGNUP_REQUEST, SIGNUP_SUCCESS, SIGNUP_FAIL } from '../types';\n\nexport const loginUser = (email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: LOGIN_REQUEST });\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        const { data } = await axios.post('/api/auth/login', { email, password }, config);\n\n        dispatch({ type: LOGIN_SUCCESS, payload: data });\n\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: LOGIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        });\n    }\n};\n\nexport const logoutUser = () => (dispatch) => {\n    localStorage.removeItem('userInfo');\n    dispatch({ type: LOGOUT });\n};\n\nexport const registerUser = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: SIGNUP_REQUEST });\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        const { data } = await axios.post('/api/auth/signup', { name, email, password }, config);\n\n        dispatch({ type: SIGNUP_SUCCESS, payload: data });\n\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: SIGNUP_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        });\n    }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,aAAa,EAAEC,aAAa,EAAEC,UAAU,EAAEC,MAAM,EAAEC,cAAc,EAAEC,cAAc,EAAEC,WAAW,QAAQ,UAAU;AAExH,OAAO,MAAMC,SAAS,GAAGA,CAACC,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EAC9D,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAEX;IAAc,CAAC,CAAC;IAEjC,MAAMY,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,iBAAiB,EAAE;MAAEP,KAAK;MAAEC;IAAS,CAAC,EAAEG,MAAM,CAAC;IAEjFF,QAAQ,CAAC;MAAEC,IAAI,EAAEV,aAAa;MAAEe,OAAO,EAAEF;IAAK,CAAC,CAAC;IAEhDG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;EAC1D,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZX,QAAQ,CAAC;MACLC,IAAI,EAAET,UAAU;MAChBc,OAAO,EAAEK,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GAAGF,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GAAGF,KAAK,CAACE;IACjG,CAAC,CAAC;EACN;AACJ,CAAC;AAED,OAAO,MAAMC,UAAU,GAAGA,CAAA,KAAOd,QAAQ,IAAK;EAC1CO,YAAY,CAACQ,UAAU,CAAC,UAAU,CAAC;EACnCf,QAAQ,CAAC;IAAEC,IAAI,EAAER;EAAO,CAAC,CAAC;AAC9B,CAAC;AAED,OAAO,MAAMuB,YAAY,GAAGA,CAACC,IAAI,EAAEnB,KAAK,EAAEC,QAAQ,KAAK,MAAOC,QAAQ,IAAK;EACvE,IAAI;IACAA,QAAQ,CAAC;MAAEC,IAAI,EAAEP;IAAe,CAAC,CAAC;IAElC,MAAMQ,MAAM,GAAG;MACXC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC;IAED,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMf,KAAK,CAACgB,IAAI,CAAC,kBAAkB,EAAE;MAAEY,IAAI;MAAEnB,KAAK;MAAEC;IAAS,CAAC,EAAEG,MAAM,CAAC;IAExFF,QAAQ,CAAC;MAAEC,IAAI,EAAEN,cAAc;MAAEW,OAAO,EAAEF;IAAK,CAAC,CAAC;IAEjDG,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC,CAAC;EAC1D,CAAC,CAAC,OAAOO,KAAK,EAAE;IACZX,QAAQ,CAAC;MACLC,IAAI,EAAEL,WAAW;MACjBU,OAAO,EAAEK,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GAAGF,KAAK,CAACC,QAAQ,CAACR,IAAI,CAACS,OAAO,GAAGF,KAAK,CAACE;IACjG,CAAC,CAAC;EACN;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}