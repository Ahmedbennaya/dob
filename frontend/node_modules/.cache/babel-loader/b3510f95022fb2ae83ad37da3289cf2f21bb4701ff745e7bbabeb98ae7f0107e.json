{"ast":null,"code":"import axios from 'axios';\nimport { FETCH_TESTIMONIALS_REQUEST, FETCH_TESTIMONIALS_SUCCESS, FETCH_TESTIMONIALS_FAILURE, ADD_TESTIMONIAL_REQUEST, ADD_TESTIMONIAL_SUCCESS, ADD_TESTIMONIAL_FAILURE } from '../constants/testimonialConstants';\n\n// Fetch testimonials\nexport const fetchTestimonials = () => async dispatch => {\n  dispatch({\n    type: FETCH_TESTIMONIALS_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await axios.get('/api/testimonials');\n    dispatch({\n      type: FETCH_TESTIMONIALS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: FETCH_TESTIMONIALS_FAILURE,\n      payload: error.response ? error.response.data.message : error.message\n    });\n  }\n};\n\n// Add a testimonial\nexport const addTestimonial = testimonial => async dispatch => {\n  dispatch({\n    type: ADD_TESTIMONIAL_REQUEST\n  });\n  try {\n    const {\n      data\n    } = await axios.post('/api/testimonials', testimonial);\n    dispatch({\n      type: ADD_TESTIMONIAL_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: ADD_TESTIMONIAL_FAILURE,\n      payload: error.response ? error.response.data.message : error.message\n    });\n  }\n};","map":{"version":3,"names":["axios","FETCH_TESTIMONIALS_REQUEST","FETCH_TESTIMONIALS_SUCCESS","FETCH_TESTIMONIALS_FAILURE","ADD_TESTIMONIAL_REQUEST","ADD_TESTIMONIAL_SUCCESS","ADD_TESTIMONIAL_FAILURE","fetchTestimonials","dispatch","type","data","get","payload","error","response","message","addTestimonial","testimonial","post"],"sources":["C:/Users/maison/OneDrive/Bureau/Haithem site/doberman-breeding-business/frontend/src/redux/actions/testimonialActions.js"],"sourcesContent":["import axios from 'axios';\nimport { \n    FETCH_TESTIMONIALS_REQUEST, \n    FETCH_TESTIMONIALS_SUCCESS, \n    FETCH_TESTIMONIALS_FAILURE, \n    ADD_TESTIMONIAL_REQUEST, \n    ADD_TESTIMONIAL_SUCCESS, \n    ADD_TESTIMONIAL_FAILURE \n} from '../constants/testimonialConstants';\n\n// Fetch testimonials\nexport const fetchTestimonials = () => async (dispatch) => {\n    dispatch({ type: FETCH_TESTIMONIALS_REQUEST });\n    try {\n        const { data } = await axios.get('/api/testimonials');\n        dispatch({ type: FETCH_TESTIMONIALS_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({ \n            type: FETCH_TESTIMONIALS_FAILURE, \n            payload: error.response ? error.response.data.message : error.message \n        });\n    }\n};\n\n// Add a testimonial\nexport const addTestimonial = (testimonial) => async (dispatch) => {\n    dispatch({ type: ADD_TESTIMONIAL_REQUEST });\n    try {\n        const { data } = await axios.post('/api/testimonials', testimonial);\n        dispatch({ type: ADD_TESTIMONIAL_SUCCESS, payload: data });\n    } catch (error) {\n        dispatch({ \n            type: ADD_TESTIMONIAL_FAILURE, \n            payload: error.response ? error.response.data.message : error.message \n        });\n    }\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACIC,0BAA0B,EAC1BC,0BAA0B,EAC1BC,0BAA0B,EAC1BC,uBAAuB,EACvBC,uBAAuB,EACvBC,uBAAuB,QACpB,mCAAmC;;AAE1C;AACA,OAAO,MAAMC,iBAAiB,GAAGA,CAAA,KAAM,MAAOC,QAAQ,IAAK;EACvDA,QAAQ,CAAC;IAAEC,IAAI,EAAER;EAA2B,CAAC,CAAC;EAC9C,IAAI;IACA,MAAM;MAAES;IAAK,CAAC,GAAG,MAAMV,KAAK,CAACW,GAAG,CAAC,mBAAmB,CAAC;IACrDH,QAAQ,CAAC;MAAEC,IAAI,EAAEP,0BAA0B;MAAEU,OAAO,EAAEF;IAAK,CAAC,CAAC;EACjE,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZL,QAAQ,CAAC;MACLC,IAAI,EAAEN,0BAA0B;MAChCS,OAAO,EAAEC,KAAK,CAACC,QAAQ,GAAGD,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GAAGF,KAAK,CAACE;IAClE,CAAC,CAAC;EACN;AACJ,CAAC;;AAED;AACA,OAAO,MAAMC,cAAc,GAAIC,WAAW,IAAK,MAAOT,QAAQ,IAAK;EAC/DA,QAAQ,CAAC;IAAEC,IAAI,EAAEL;EAAwB,CAAC,CAAC;EAC3C,IAAI;IACA,MAAM;MAAEM;IAAK,CAAC,GAAG,MAAMV,KAAK,CAACkB,IAAI,CAAC,mBAAmB,EAAED,WAAW,CAAC;IACnET,QAAQ,CAAC;MAAEC,IAAI,EAAEJ,uBAAuB;MAAEO,OAAO,EAAEF;IAAK,CAAC,CAAC;EAC9D,CAAC,CAAC,OAAOG,KAAK,EAAE;IACZL,QAAQ,CAAC;MACLC,IAAI,EAAEH,uBAAuB;MAC7BM,OAAO,EAAEC,KAAK,CAACC,QAAQ,GAAGD,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GAAGF,KAAK,CAACE;IAClE,CAAC,CAAC;EACN;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}