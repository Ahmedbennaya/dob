{"ast":null,"code":"import axios from'axios';import{LOGIN_REQUEST,LOGIN_SUCCESS,LOGIN_FAIL,LOGOUT,SIGNUP_REQUEST,SIGNUP_SUCCESS,SIGNUP_FAIL}from'../types';export const loginUser=(email,password)=>async dispatch=>{try{dispatch({type:LOGIN_REQUEST});const config={headers:{'Content-Type':'application/json'}};const{data}=await axios.post('/api/auth/login',{email,password},config);dispatch({type:LOGIN_SUCCESS,payload:data});localStorage.setItem('userInfo',JSON.stringify(data));}catch(error){dispatch({type:LOGIN_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const logoutUser=()=>dispatch=>{localStorage.removeItem('userInfo');dispatch({type:LOGOUT});};export const registerUser=(name,email,password)=>async dispatch=>{try{dispatch({type:SIGNUP_REQUEST});const config={headers:{'Content-Type':'application/json'}};const{data}=await axios.post('/api/auth/signup',{name,email,password},config);dispatch({type:SIGNUP_SUCCESS,payload:data});localStorage.setItem('userInfo',JSON.stringify(data));}catch(error){dispatch({type:SIGNUP_FAIL,payload:error.response&&error.response.data.message?error.response.data.message:error.message});}};export const sendContactInquiry=(name,email,message)=>async dispatch=>{try{const config={headers:{'Content-Type':'application/json'}};await axios.post('/api/contact',{name,email,message},config);}catch(error){console.error(error);}};","map":{"version":3,"names":["axios","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_FAIL","loginUser","email","password","dispatch","type","config","headers","data","post","payload","localStorage","setItem","JSON","stringify","error","response","message","logoutUser","removeItem","registerUser","name","sendContactInquiry","console"],"sources":["C:/Users/maison/OneDrive/Bureau/Haithem site/doberman-breeding-business/frontend/src/redux/actions/authActions.js"],"sourcesContent":["import axios from 'axios';\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, SIGNUP_REQUEST, SIGNUP_SUCCESS, SIGNUP_FAIL } from '../types';\n\nexport const loginUser = (email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: LOGIN_REQUEST });\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        const { data } = await axios.post('/api/auth/login', { email, password }, config);\n\n        dispatch({ type: LOGIN_SUCCESS, payload: data });\n\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: LOGIN_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        });\n    }\n};\n\nexport const logoutUser = () => (dispatch) => {\n    localStorage.removeItem('userInfo');\n    dispatch({ type: LOGOUT });\n};\n\nexport const registerUser = (name, email, password) => async (dispatch) => {\n    try {\n        dispatch({ type: SIGNUP_REQUEST });\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        const { data } = await axios.post('/api/auth/signup', { name, email, password }, config);\n\n        dispatch({ type: SIGNUP_SUCCESS, payload: data });\n\n        localStorage.setItem('userInfo', JSON.stringify(data));\n    } catch (error) {\n        dispatch({\n            type: SIGNUP_FAIL,\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message,\n        });\n    }\n};\n\nexport const sendContactInquiry = (name, email, message) => async (dispatch) => {\n    try {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json',\n            },\n        };\n\n        await axios.post('/api/contact', { name, email, message }, config);\n    } catch (error) {\n        console.error(error);\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}